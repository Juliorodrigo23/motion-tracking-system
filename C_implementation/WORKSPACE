workspace(name = "arm_tracker")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "new_git_repository")

######################
# Base Dependencies #
######################

# Rules for C++
http_archive(
    name = "rules_cc",
    sha256 = "35f2fb4ea0b3e61ad64a369de284e4fbbdcdba71836a5555abb5e194cf119509",
    strip_prefix = "rules_cc-624b5d59dfb45672d4239422fa1e3de1822ee110",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/624b5d59dfb45672d4239422fa1e3de1822ee110.tar.gz"],
)

# Initialize rules_cc
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# Add bazel-skylib dependency
http_archive(
    name = "bazel_skylib",
    sha256 = "cd55a062e763b9349921f0f5db8c3933288dc8ba4f76dd9416aac68acee3cb94",
    urls = ["https://github.com/bazelbuild/bazel-skylib/releases/download/1.5.0/bazel-skylib-1.5.0.tar.gz"],
)

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()

######################
# Protocol Buffers #
######################

http_archive(
    name = "com_google_protobuf",
    sha256 = "616bb3536ac1fff3fb1a141450fa28b875e985712170ea7f1bfe5e5fc41e2cd8",
    strip_prefix = "protobuf-24.4",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/v24.4.tar.gz"],
)

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

######################
# Abseil #
######################

http_archive(
    name = "com_google_absl",
    sha256 = "987ce98f02eefbaf930d6e38ab16aa05737234d7afbab2d5c4ea7adbe50c28ed",
    strip_prefix = "abseil-cpp-20230802.1",
    urls = ["https://github.com/abseil/abseil-cpp/archive/refs/tags/20230802.1.tar.gz"],
)

######################
# Local Dependencies #
######################

# Eigen
new_local_repository(
    name = "eigen",
    path = "/opt/homebrew/opt/eigen",
    build_file_content = """
cc_library(
    name = "eigen",
    includes = ["include/eigen3"],
    hdrs = glob(["include/eigen3/**"]),
    visibility = ["//visibility:public"],
)
"""
)

# OpenCV
new_local_repository(
    name = "opencv",
    path = "/opt/homebrew/opt/opencv",
    build_file_content = """
cc_library(
    name = "opencv",
    srcs = glob(["lib/*.dylib"]),
    hdrs = glob(["include/opencv4/**/*.h*"]),
    includes = ["include/opencv4"],
    visibility = ["//visibility:public"],
    linkopts = [
        "-L/opt/homebrew/opt/opencv/lib",
        "-lopencv_core",
        "-lopencv_highgui",
        "-lopencv_imgcodecs",
        "-lopencv_imgproc",
        "-lopencv_video",
        "-lopencv_videoio",
    ],
)
"""
)

# Local MediaPipe
local_repository(
    name = "mediapipe",
    path = "mediapipe",
)